{"ast":null,"code":"var _jsxFileName = \"/Users/rainfalling/RainFalling/\\u65E0\\u950B/homework/train/reactBase/src/pages/popular/PoPularList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Spin, Row, Col } from 'antd';\nimport { getAll, getMoreByUrl } from '../../services/Popular';\nimport './Popular.css';\nimport PopularCard from '../../components/PopularCard/PopularCard'; // eslint-disable-next-line import/order\n\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopularList = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [pageType, setPageType] = useState(undefined); // if (this.props.location){\n  //\n  // }\n\n  const typeList = [{\n    label: 'All',\n    type: undefined\n  }, {\n    label: 'Javascript',\n    type: '+language:javascript'\n  }, {\n    label: 'Ruby',\n    type: '+language:Ruby'\n  }, {\n    label: 'Java',\n    type: '+language:Java'\n  }, {\n    label: 'CSS',\n    type: '+language:CSS'\n  }];\n  useEffect(() => {\n    // getMore(null, 1, [])\n    // 初始化\n    getAll(pageNum).then(res => {\n      if (res.data) {\n        res.data.items && setList(res.data.items);\n        setPageNum(pageNum + 1);\n      }\n    });\n  }, []); // eslint-disable-next-line no-shadow\n\n  const getMore = (pageType, pageNum, pageList) => {\n    if (!pageType) {\n      // 拉取全部\n      getAll(pageNum).then(res => {\n        if (res.data) {\n          res.data.items && setList([...pageList, ...res.data.items]);\n          setPageNum(pageNum + 1);\n        }\n      });\n    } else {\n      getMoreByUrl(pageType, pageNum).then(res => {\n        setList([...pageList, ...res.data.items]);\n        setPageNum(pageNum + 1);\n      });\n    }\n  }; // 顶部六个选择\n\n\n  const TopNav = () => {\n    const path = {\n      pathname: `/list?type=${pageType || 'all'}`\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        display: 'flex',\n        listStyle: 'none',\n        fontWeight: 'bold'\n      },\n      children: typeList.map((i, index) => /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          margin: '10px 10px',\n          textDecoration: 'none',\n          fontSize: '16px'\n        },\n        onClick: () => {\n          setPageType(i.type);\n          setList([]);\n          getMore(i.type, 1, []);\n        },\n        to: path,\n        className: pageType === i.type ? 'topNavBtnSelect' : 'topNavBtn',\n        children: i.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), list && list.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        loadMore: () => getMore(pageType, pageNum, list),\n        loader: null,\n        hasMore: true,\n        initialLoad: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          type: \"flex\",\n          justify: \"center\",\n          align: \"center\",\n          children: list.map((i, index) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 12,\n            md: 8,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(PopularCard, {\n              item: i,\n              index: index\n            }, i.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\",\n      tip: \"\\u52A0\\u8F7D\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this), list && list.length > 0 && /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\",\n      tip: \"\\u52A0\\u8F7D\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopularList, \"SyX8FXik1p9Wdzh8nP+0OlAofms=\");\n\n_c = PopularList;\nexport default PopularList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopularList\");","map":{"version":3,"sources":["/Users/rainfalling/RainFalling/无锋/homework/train/reactBase/src/pages/popular/PoPularList.js"],"names":["React","useState","useEffect","Spin","Row","Col","getAll","getMoreByUrl","PopularCard","InfiniteScroll","Link","PopularList","list","setList","pageNum","setPageNum","pageType","setPageType","undefined","typeList","label","type","then","res","data","items","getMore","pageList","TopNav","path","pathname","flexDirection","alignItems","display","listStyle","fontWeight","map","i","index","margin","textDecoration","fontSize","length","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Spin, Row, Col,\n} from 'antd';\nimport { getAll, getMoreByUrl } from '../../services/Popular';\nimport './Popular.css';\nimport PopularCard from '../../components/PopularCard/PopularCard';\n// eslint-disable-next-line import/order\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Link } from 'react-router-dom';\n\nconst PopularList = () => {\n  const [list, setList] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  const [pageType, setPageType] = useState(undefined);\n\n  // if (this.props.location){\n  //\n  // }\n  const typeList = [\n    {\n      label: 'All',\n      type: undefined,\n    },\n    {\n      label: 'Javascript',\n      type: '+language:javascript',\n    },\n    {\n      label: 'Ruby',\n      type: '+language:Ruby',\n    },\n    {\n      label: 'Java',\n      type: '+language:Java',\n    },\n    {\n      label: 'CSS',\n      type: '+language:CSS',\n    },\n  ];\n\n  useEffect(() => {\n    // getMore(null, 1, [])\n    // 初始化\n    getAll(pageNum).then(\n      (res) => {\n        if (res.data) {\n          res.data.items && setList(res.data.items);\n          setPageNum(pageNum + 1);\n        }\n      },\n    );\n  }, []);\n\n  // eslint-disable-next-line no-shadow\n  const getMore = (pageType, pageNum, pageList) => {\n    if (!pageType) {\n      // 拉取全部\n      getAll(pageNum).then(\n        (res) => {\n          if (res.data) {\n            res.data.items && setList([...pageList, ...res.data.items]);\n            setPageNum(pageNum + 1);\n          }\n        },\n      );\n    } else {\n      getMoreByUrl(pageType, pageNum).then(\n        (res) => {\n          setList([...pageList, ...res.data.items]);\n          setPageNum(pageNum + 1);\n        },\n      );\n    }\n  };\n\n  // 顶部六个选择\n  const TopNav = () => {\n    const path = {\n      pathname: `/list?type=${pageType || 'all'}`,\n    };\n    return (\n\n      <div style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        display: 'flex',\n        listStyle: 'none',\n        fontWeight: 'bold',\n      }}\n      >\n        {\n                        typeList.map((i, index) => (\n                          <Link\n                            key={index}\n                            style={{ margin: '10px 10px', textDecoration: 'none', fontSize: '16px' }}\n                            onClick={() => {\n                              setPageType(i.type);\n                              setList([]);\n                              getMore(i.type, 1, []);\n                            }}\n                            to={path}\n                            className={(pageType === i.type) ? 'topNavBtnSelect' : 'topNavBtn'}\n                          >\n                            {i.label}\n                          </Link>\n                        ))\n                    }\n\n      </div>\n\n    );\n  };\n\n  return (\n    <div style={{ flexDirection: 'column', alignItems: 'center', display: 'flex' }}>\n      <TopNav />\n      {list && list.length > 0\n        ? (\n          <div>\n            <InfiniteScroll\n              loadMore={() => getMore(pageType, pageNum, list)}\n              loader={null}\n              hasMore\n              initialLoad\n            >\n              {/* 卡片区域 */}\n              {/* <div className={\"listArea\"}> */}\n              <Row type=\"flex\" justify=\"center\" align=\"center\">\n                {\n                                    list.map(\n                                      (i, index) => (\n                                        <Col xs={24} sm={12} md={8} lg={6}>\n                                          <PopularCard item={i} key={i.id} index={index} />\n                                        </Col>\n                                      ),\n                                    )\n                                }\n              </Row>\n\n              {/* </div> */}\n            </InfiniteScroll>\n          </div>\n        )\n        : <Spin size=\"large\" tip=\"加载中...\" />}\n      {list && list.length > 0 && <Spin size=\"large\" tip=\"加载中...\" />}\n\n    </div>\n\n  );\n};\nexport default PopularList;\n"]},"metadata":{},"sourceType":"module"}