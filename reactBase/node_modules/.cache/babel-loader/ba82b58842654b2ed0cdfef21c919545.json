{"ast":null,"code":"var _jsxFileName = \"/Users/rainfalling/RainFalling/\\u65E0\\u950B/homework/train/reactBase/src/pages/popular/Popular.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Spin, Row, Col } from \"antd\";\nimport { getAll, getMoreByUrl } from \"../../services/Popular\";\nimport \"./Popular.css\";\nimport PopularCard from \"../../components/PopularCard/PopularCard\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Popular = props => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [pageNum, setPageNum] = useState(1);\n  const [pageType, setPageType] = useState(undefined);\n  const [preType, setPreType] = useState(undefined);\n  const typeList = [{\n    label: \"All\",\n    type: undefined\n  }, {\n    label: \"Javascript\",\n    type: \"+language:javascript\"\n  }, {\n    label: \"Ruby\",\n    type: \"+language:Ruby\"\n  }, {\n    label: \"Java\",\n    type: \"+language:Java\"\n  }, {\n    label: \"CSS\",\n    type: \"+language:CSS\"\n  }];\n  useEffect(() => {\n    // getMore(null, 1, [])\n    //初始化\n    getAll(pageNum).then(res => {\n      if (res.data) {\n        res.data.items && setList(res.data.items);\n        setPageNum(pageNum + 1);\n      }\n    }).catch(() => {\n      alert(\"别刷太快噢亲～\");\n      setList([]);\n      setHasMore(false);\n    });\n  }, []);\n\n  const getMore = (pageType, pageNum, pageList) => {\n    setHasMore(true);\n\n    if (!pageType) {\n      //拉取全部\n      getAll(pageNum).then(res => {\n        if (res.data) {\n          res.data.items && setList([...pageList, ...res.data.items]);\n          setPageNum(pageNum + 1);\n          setHasMore(false);\n        }\n      }).catch(() => {\n        alert(\"别刷太快噢亲～\");\n        setList([]);\n        setHasMore(false);\n      });\n    } else {\n      getMoreByUrl(pageType, pageNum).then(res => {\n        setList([...pageList, ...res.data.items]);\n        setPageNum(pageNum + 1);\n        setHasMore(false);\n      }).catch(() => {\n        alert(\"别刷太快噢亲～\");\n        setList([]);\n        setHasMore(false);\n      });\n    }\n  }; //顶部六个选择\n\n\n  const TopNav = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        display: 'flex',\n        listStyle: 'none',\n        fontWeight: 'bold'\n      },\n      children: typeList.map((i, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          margin: \"10px 10px\",\n          textDecoration: 'none',\n          fontSize: \"16px\"\n        } // onMouseEnter={() => setPageType(i.type)}\n        ,\n        onClick: () => {\n          setPageType(i.type);\n          setList([]);\n          getMore(i.type, 1, []);\n        },\n        className: pageType === i.type ? \"topNavBtnSelect\" : \"topNavBtn\",\n        children: i.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this), list && list.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        loadMore: () => getMore(pageType, pageNum, list),\n        loader: null,\n        hasMore: true,\n        initialLoad: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          type: \"flex\",\n          justify: \"center\",\n          align: \"center\",\n          children: list.map((i, index) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 12,\n            md: 8,\n            lg: 6,\n            children: /*#__PURE__*/_jsxDEV(PopularCard, {\n              item: i,\n              index: index\n            }, i.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\",\n      tip: \"加载中...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }, this), list && list.length > 0 && /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"large\",\n      tip: \"加载中...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Popular, \"fvorFuock6j2bpp8jcPRanseI90=\");\n\n_c = Popular;\nexport default Popular;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popular\");","map":{"version":3,"sources":["/Users/rainfalling/RainFalling/无锋/homework/train/reactBase/src/pages/popular/Popular.js"],"names":["React","useState","useEffect","Button","Spin","Row","Col","getAll","getMoreByUrl","PopularCard","InfiniteScroll","Link","Popular","props","list","setList","hasMore","setHasMore","pageNum","setPageNum","pageType","setPageType","undefined","preType","setPreType","typeList","label","type","then","res","data","items","catch","alert","getMore","pageList","TopNav","flexDirection","alignItems","display","listStyle","fontWeight","map","i","index","margin","textDecoration","fontSize","length","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAqC,MAArC;AACA,SAAQC,MAAR,EAAgBC,YAAhB,QAAmC,wBAAnC;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAACqB,SAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAACqB,SAAD,CAAtC;AAIA,QAAMG,QAAQ,GAAG,CACb;AACIC,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,IAAI,EAAEL;AAFV,GADa,EAKb;AACII,IAAAA,KAAK,EAAE,YADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALa,EASb;AACID,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GATa,EAab;AACID,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAba,EAiBb;AACID,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAjBa,CAAjB;AAwBAzB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AAGAK,IAAAA,MAAM,CAACW,OAAD,CAAN,CAAgBU,IAAhB,CACIC,GAAG,IAAI;AACH,UAAIA,GAAG,CAACC,IAAR,EAAc;AACVD,QAAAA,GAAG,CAACC,IAAJ,CAASC,KAAT,IAAkBhB,OAAO,CAACc,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAzB;AACAZ,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;AACJ,KANL,EAOEc,KAPF,CAOQ,MAAK;AACTC,MAAAA,KAAK,CAAC,SAAD,CAAL;AACAlB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAXD;AAYH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAMiB,OAAO,GAAG,CAACd,QAAD,EAAWF,OAAX,EAAoBiB,QAApB,KAAiC;AAC7ClB,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI,CAACG,QAAL,EAAe;AACX;AACAb,MAAAA,MAAM,CAACW,OAAD,CAAN,CAAgBU,IAAhB,CACIC,GAAG,IAAI;AACH,YAAIA,GAAG,CAACC,IAAR,EAAc;AACVD,UAAAA,GAAG,CAACC,IAAJ,CAASC,KAAT,IAAkBhB,OAAO,CAAC,CAAC,GAAGoB,QAAJ,EAAc,GAAGN,GAAG,CAACC,IAAJ,CAASC,KAA1B,CAAD,CAAzB;AACAZ,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAD,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,OAPL,EAQEe,KARF,CAQQ,MAAK;AACTC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACAlB,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAZD;AAaH,KAfD,MAeO;AACHT,MAAAA,YAAY,CAACY,QAAD,EAAWF,OAAX,CAAZ,CAAgCU,IAAhC,CACIC,GAAG,IAAI;AACHd,QAAAA,OAAO,CAAC,CAAC,GAAGoB,QAAJ,EAAc,GAAGN,GAAG,CAACC,IAAJ,CAASC,KAA1B,CAAD,CAAP;AACAZ,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OALL,EAMEe,KANF,CAMQ,MAAK;AACTC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACAlB,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAVD;AAWH;AAEJ,GA/BD,CApDmB,CAqFnB;;;AACA,QAAMmB,MAAM,GAAG,MAAM;AAEjB,wBAEI;AAAK,MAAA,KAAK,EAAE;AACRC,QAAAA,aAAa,EAAE,KADP;AAERC,QAAAA,UAAU,EAAE,QAFJ;AAGRC,QAAAA,OAAO,EAAE,MAHD;AAIRC,QAAAA,SAAS,EAAE,MAJH;AAKRC,QAAAA,UAAU,EAAE;AALJ,OAAZ;AAAA,gBAQQhB,QAAQ,CAACiB,GAAT,CAAa,CAACC,CAAD,EAAIC,KAAJ,kBACT;AAAe,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,WAAT;AAAsBC,UAAAA,cAAc,EAAE,MAAtC;AAA8CC,UAAAA,QAAQ,EAAE;AAAxD,SAAtB,CACM;AADN;AAEM,QAAA,OAAO,EAAE,MAAM;AACX1B,UAAAA,WAAW,CAACsB,CAAC,CAAChB,IAAH,CAAX;AACAZ,UAAAA,OAAO,CAAC,EAAD,CAAP;AACAmB,UAAAA,OAAO,CAACS,CAAC,CAAChB,IAAH,EAAS,CAAT,EAAY,EAAZ,CAAP;AACH,SANP;AAOM,QAAA,SAAS,EAAGP,QAAQ,KAAKuB,CAAC,CAAChB,IAAhB,GAAwB,iBAAxB,GAA4C,WAP7D;AAAA,kBAQKgB,CAAC,CAACjB;AARP,SAAQkB,KAAR;AAAA;AAAA;AAAA;AAAA,cADJ;AARR;AAAA;AAAA;AAAA;AAAA,YAFJ;AA4BH,GA9BD;;AAiCA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACP,MAAAA,aAAa,EAAE,QAAhB;AAA0BC,MAAAA,UAAU,EAAE,QAAtC;AAAgDC,MAAAA,OAAO,EAAE;AAAzD,KAAZ;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKzB,IAAI,IAAIA,IAAI,CAACkC,MAAL,GAAc,CAAtB,gBACG;AAAA,6BACI,QAAC,cAAD;AACI,QAAA,QAAQ,EAAE,MAAMd,OAAO,CAACd,QAAD,EAAWF,OAAX,EAAoBJ,IAApB,CAD3B;AAEI,QAAA,MAAM,EAAE,IAFZ;AAGI,QAAA,OAAO,EAAE,IAHb;AAII,QAAA,WAAW,EAAE,IAJjB;AAAA,+BAQI,QAAC,GAAD;AAAK,UAAA,IAAI,EAAC,MAAV;AAAiB,UAAA,OAAO,EAAC,QAAzB;AAAkC,UAAA,KAAK,EAAC,QAAxC;AAAA,oBAEQA,IAAI,CAAC4B,GAAL,CACI,CAACC,CAAD,EAAIC,KAAJ,kBACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAa,YAAA,EAAE,EAAE,EAAjB;AAAqB,YAAA,EAAE,EAAE,CAAzB;AAA4B,YAAA,EAAE,EAAE,CAAhC;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,IAAI,EAAED,CAAnB;AAAiC,cAAA,KAAK,EAAEC;AAAxC,eAA2BD,CAAC,CAACM,EAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFR;AAFR;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,gBAwBK,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE,OAAZ;AAAqB,MAAA,GAAG,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,YA1BV,EA2BKnC,IAAI,IAAIA,IAAI,CAACkC,MAAL,GAAc,CAAtB,iBAA2B,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE,OAAZ;AAAqB,MAAA,GAAG,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,YA3BhC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAxJL;;GAAMpC,O;;KAAAA,O;AA4JN,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Button, Spin, Row, Col} from \"antd\";\nimport {getAll, getMoreByUrl} from \"../../services/Popular\";\nimport \"./Popular.css\";\nimport PopularCard from \"../../components/PopularCard/PopularCard\";\nimport InfiniteScroll from 'react-infinite-scroller';\nimport {Link} from \"react-router-dom\";\n\n\nconst Popular = (props) => {\n        const [list, setList] = useState([]);\n        const [hasMore, setHasMore] = useState(true);\n        const [pageNum, setPageNum] = useState(1);\n        const [pageType, setPageType] = useState(undefined);\n        const [preType, setPreType] = useState(undefined);\n\n\n\n        const typeList = [\n            {\n                label: \"All\",\n                type: undefined\n            },\n            {\n                label: \"Javascript\",\n                type: \"+language:javascript\"\n            },\n            {\n                label: \"Ruby\",\n                type: \"+language:Ruby\"\n            },\n            {\n                label: \"Java\",\n                type: \"+language:Java\"\n            },\n            {\n                label: \"CSS\",\n                type: \"+language:CSS\"\n            },\n        ]\n\n\n        useEffect(() => {\n            // getMore(null, 1, [])\n            //初始化\n\n\n            getAll(pageNum).then(\n                res => {\n                    if (res.data) {\n                        res.data.items && setList(res.data.items);\n                        setPageNum(pageNum + 1);\n                    }\n                }\n            ).catch(() =>{\n                alert(\"别刷太快噢亲～\")\n                setList([]);\n                setHasMore(false);\n            });\n        }, []);\n\n        const getMore = (pageType, pageNum, pageList) => {\n            setHasMore(true)\n            if (!pageType) {\n                //拉取全部\n                getAll(pageNum).then(\n                    res => {\n                        if (res.data) {\n                            res.data.items && setList([...pageList, ...res.data.items]);\n                            setPageNum(pageNum + 1);\n                            setHasMore(false);\n                        }\n                    }\n                ).catch(() =>{\n                    alert(\"别刷太快噢亲～\")\n                    setList([]);\n                    setHasMore(false);\n                });\n            } else {\n                getMoreByUrl(pageType, pageNum).then(\n                    res => {\n                        setList([...pageList, ...res.data.items]);\n                        setPageNum(pageNum + 1)\n                        setHasMore(false)\n                    }\n                ).catch(() =>{\n                    alert(\"别刷太快噢亲～\")\n                    setList([]);\n                    setHasMore(false);\n                });\n            }\n\n        };\n\n        //顶部六个选择\n        const TopNav = () => {\n\n            return (\n\n                <div style={{\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    display: 'flex',\n                    listStyle: 'none',\n                    fontWeight: 'bold',\n                }}>\n                    {\n                        typeList.map((i, index) =>\n                            <a key={index} style={{margin: \"10px 10px\", textDecoration: 'none', fontSize: \"16px\"}}\n                                  // onMouseEnter={() => setPageType(i.type)}\n                                  onClick={() => {\n                                      setPageType(i.type);\n                                      setList([]);\n                                      getMore(i.type, 1, []);\n                                  }}\n                                  className={(pageType === i.type) ? \"topNavBtnSelect\" : \"topNavBtn\"}>\n                                {i.label}\n                            </a>\n                        )\n                    }\n\n                </div>\n\n\n            )\n        }\n\n\n        return (\n            <div style={{flexDirection: 'column', alignItems: 'center', display: \"flex\"}}>\n                <TopNav/>\n                {list && list.length > 0 ?\n                    <div>\n                        <InfiniteScroll\n                            loadMore={() => getMore(pageType, pageNum, list)}\n                            loader={null}\n                            hasMore={true}\n                            initialLoad={true}\n                        >\n                            {/*卡片区域*/}\n                            {/*<div className={\"listArea\"}>*/}\n                            <Row type=\"flex\" justify=\"center\" align=\"center\">\n                                {\n                                    list.map(\n                                        (i, index) =>\n                                            <Col xs={24} sm={12} md={8} lg={6}>\n                                                <PopularCard item={i} key={i.id} index={index}/>\n                                            </Col>\n                                    )\n                                }\n                            </Row>\n\n                            {/*</div>*/}\n                        </InfiniteScroll>\n                    </div>\n                    : <Spin size={\"large\"} tip={\"加载中...\"}/>}\n                {list && list.length > 0 && <Spin size={\"large\"} tip={\"加载中...\"}/>}\n\n            </div>\n\n        )\n    }\n;\n\n\nexport default Popular;\n"]},"metadata":{},"sourceType":"module"}